{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","user","id","alt","name","CardList","users","map","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","e","setState","searchUser","target","value","state","fetch","then","response","json","this","filteredUsers","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,KAAKC,GAArC,0BACHC,IAAI,SAEN,6BAAKL,EAAMG,KAAKG,WCIPC,G,MAVE,SAACP,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMQ,MAAMC,KAAI,SAACN,GAAD,OACf,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,WCLXM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEX,UAAU,SACVY,KAAK,SACLC,YAAaH,EACbI,SAAUH,MCmCDI,G,wDAtCb,aAAe,IAAD,8BACZ,gBAcFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,WAAYF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXd,MAAO,GACPW,WAAY,IALF,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAChB,GAAD,OAAW,EAAKU,SAAS,CAAEV,MAAOA,S,oBAO5C,WAAU,IAAD,EACuBmB,KAAKL,MAA3Bd,EADD,EACCA,MAAOW,EADR,EACQA,WACTS,EAAgBpB,EAAMqB,QAAO,SAAC1B,GAAD,OACjCA,EAAKG,KAAKwB,cAAcC,SAASZ,EAAWW,kBAG9C,OACE,sBAAK7B,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,8BACA,cAAC,EAAD,CACEU,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,MAAOoB,W,GAjCPI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.486ab2d3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.style.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`https://robohash.org/${props.user.id}?set=set2&size=180x180`}\r\n        alt=\"User\"\r\n      />\r\n      <h1>{props.user.name}</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport \"./card-list.style.css\";\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.users.map((user) => (\r\n        <Card key={user.id} user={user} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./search-box.style.css\";\r\n\r\nexport const SearchBox = ({ placeHolder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeHolder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n","import { Component } from \"react\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      users: [],\n      searchUser: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ users: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchUser: e.target.value });\n  };\n\n  render() {\n    const { users, searchUser } = this.state;\n    const filteredUsers = users.filter((user) =>\n      user.name.toLowerCase().includes(searchUser.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"heading\">Company Database</h1>\n        <SearchBox\n          placeHolder=\"Search for User\"\n          handleChange={this.handleChange}\n        />\n        <CardList users={filteredUsers} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}